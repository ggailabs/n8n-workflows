{
  "name": "DinDin",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "din-din",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1040,
        -80
      ],
      "id": "48c48a66-6e04-4d12-a2a6-c6ab16dd6620",
      "name": "Webhook",
      "webhookId": "829288a5-2e16-455f-a7c6-281dc4ded9c3"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n// A string que você está recebendo\nconst stringRecebida = $input.first().json.content;\n\n// Removendo os delimitadores de código Markdown (```) e caracteres \\n\nconst jsonBruto = stringRecebida\n  .replace(/```json\\n|\\n```/g, '')  // Remove os marcadores de código Markdown\n  .replace(/\\\\n/g, '')              // Remove os \\n literais\n\n// Fazendo o parse para um objeto JavaScript\nconst objetoJSON = JSON.parse(jsonBruto);\n\nreturn {\n  ...objetoJSON,\n  user: $('Filtra Dados').first().json.whatsapp\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1000,
        -260
      ],
      "id": "0d6a8a03-3df5-4949-8959-a9bd230210f1",
      "name": "Code"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9d3f9f23-7b70-484a-8994-2269c1ed08bc",
              "name": "whatsapp",
              "value": "={{ $json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "4c77601b-e5d8-4cd1-89d0-5bb04a7ddcdc",
              "name": "base64",
              "value": "={{ $json.body.data.message.base64 }}",
              "type": "string"
            },
            {
              "id": "5bcdacb3-e89f-4836-9fcc-f2e2b4bf371e",
              "name": "messageType",
              "value": "={{ $json.body.data.messageType }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -780,
        -80
      ],
      "id": "7c66f05d-d733-4a66-8fa6-aa9614d8ac37",
      "name": "Filtra Dados"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=O seu unico objeto é criar uma mensagem de sucesso sobre o registro dos dados abaixo de no máximo 100 caracter.\n\n*DADOS DA COMPRA*\nquando: {{ $json.data }}\nonde: {{ $json.estabelecimento }}\nvalor: {{ $json.valor }}\ndetalhes: {{ $json.detalhes }}\ncategoria: {{ $json.categoria }}\ntipo: {{ $json.tipo }}\n\n"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        3180,
        120
      ],
      "id": "cfb2cce6-aa90-41ee-80e3-9840cba2e1d9",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "zanini",
        "remoteJid": "={{ $('filtraDados').item.json.whatsapp }}",
        "messageText": "={{ $json.text }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        3500,
        120
      ],
      "id": "fb40f488-f38e-48f6-81e0-3d5469903911",
      "name": "Responde o Cliente",
      "credentials": {
        "evolutionApi": {
          "id": "5X7A82p6sTHLRQRC",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "zanini",
        "remoteJid": "={{ $('Filtra Dados').item.json.whatsapp }}",
        "messageText": "Oops! Não foi possível registrar as informações.",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1020,
        -480
      ],
      "id": "16fa1d53-c1c4-41b7-8a2c-8b7ccfda4377",
      "name": "Mensagem de Erro",
      "credentials": {
        "evolutionApi": {
          "id": "5X7A82p6sTHLRQRC",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "2be6f6b1-e607-49c4-980d-fd03c478279a"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "imagem"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f20361f5-f595-45a3-bf24-1ed03108835c",
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7969dbe1-785a-4853-bd58-3b89447bba1b",
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -540,
        -80
      ],
      "id": "258147ec-f91f-4862-aa2a-4d9234903cce",
      "name": "Verifica o Tipo de mensagem"
    },
    {
      "parameters": {
        "amount": 6
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        320,
        260
      ],
      "id": "dbd03f46-5498-478b-a846-3c56c966e871",
      "name": "Wait",
      "webhookId": "3a561c40-a161-4071-a3b6-4e27c441eedd"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $json.whatsapp }}",
        "messageData": "={{ $('Webhook').item.json.body.data.message.conversation }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        100,
        260
      ],
      "id": "9a1c3cc0-597e-4f23-94cc-25498bad5474",
      "name": "Listar Mensagens",
      "credentials": {
        "redis": {
          "id": "d7jJOBQastucPcZa",
          "name": "Redis account 3"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "mensagens",
        "key": "={{ $json.whatsapp }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        540,
        260
      ],
      "id": "57021c25-4434-4a48-9e38-27c40d53ed07",
      "name": "Puxar Mensagens",
      "credentials": {
        "redis": {
          "id": "d7jJOBQastucPcZa",
          "name": "Redis account 3"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        980,
        380
      ],
      "id": "d2ffd663-69c7-483c-84ae-8fcbb195ba35",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "96833a1a-530e-43ac-87c6-ff3fe2635b9a",
              "name": "mensagens",
              "value": "={{ $('Puxar Mensagens').item.json.mensagens.join('\\n') }}",
              "type": "string"
            },
            {
              "id": "2c8e9f69-fa5c-42d1-ab15-cc315e85f82a",
              "name": "whatsapp",
              "value": "={{ $('Wait').item.json.whatsapp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        980,
        160
      ],
      "id": "15719b22-3bb0-4191-8440-70e283046b82",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $json.whatsapp }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1200,
        160
      ],
      "id": "f2bcf01a-d3f8-4192-8614-b5b5a9b12321",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "d7jJOBQastucPcZa",
          "name": "Redis account 3"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3cc229ad-229c-4b69-b868-afe3b2d6827b",
              "leftValue": "={{ $json.mensagens.last() }}",
              "rightValue": "={{ $('Webhook').item.json.body.data.message.conversation }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        760,
        260
      ],
      "id": "4dc94546-5dbe-425a-a7d1-cd4cfe776cd1",
      "name": "If1"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "estabelecimento"
            },
            {
              "name": "valor",
              "type": "number"
            },
            {
              "name": "quando"
            },
            {
              "name": "detalhes"
            },
            {
              "name": "whatsapp"
            },
            {
              "name": "tipo"
            },
            {
              "name": "categoria"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        2500,
        120
      ],
      "id": "ee74c81b-8c4b-47ac-92d6-40261b15f091",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "content": "## Registra dados\nRegistra as informações no banco de dados e responde o cliente com uma mensagem de sucesso.\n",
        "height": 500,
        "width": 1400,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2440,
        -40
      ],
      "typeVersion": 1,
      "id": "b84b47fa-e742-401f-a3b4-e016524ab10a",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "={{$workflow.id}}",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "valor": "={{ $json.valorTotal }}",
            "estabelecimento": "={{ $json.estabelecimento }}",
            "detalhes": "={{ $json.detalhes }}",
            "categoria": "={{ $json.categoria }}",
            "tipo": "={{ $json.tipo }}",
            "whatsapp": "={{ $json.user }}",
            "quando": "={{ $json.quando }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "estabelecimento",
              "displayName": "estabelecimento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "valor",
              "displayName": "valor",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            },
            {
              "id": "quando",
              "displayName": "quando",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "detalhes",
              "displayName": "detalhes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "whatsapp",
              "displayName": "whatsapp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "tipo",
              "displayName": "tipo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "categoria",
              "displayName": "categoria",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1220,
        -260
      ],
      "id": "3f04147a-95d4-4424-8fc9-5dda13b050dd",
      "name": "Execute Workflow"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3140,
        300
      ],
      "id": "c7fa59ec-8d04-4a40-bc44-718b3cb22b86",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "4r4Fgn9sFRNt2fGS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.mensagens }}",
        "options": {
          "systemMessage": "=hora atual: {{ $now }}\nmensagem: {{ $json.mensagens }}\n\nIdentifique as informações contidas na mensagem como o valor total da compra, nome do estabelecimento, data e hora (se não encontrar utilize a data e hora atual), categoria, identifique e registre também o tipo da moviementação se é uma 'despesa' ou 'receita'. Utilize a tool \"registraDados\" para salvar as informações.\n\"whatsapp\": {{ $('Wait').item.json.whatsapp }}\n\"estabelecimento\": \"(NOME_ESTABELECIMENTO)\",\n\"quando\": \"(DATA E HORA NO FORMATO TIMESTAMP)\",\n\"valorTotal\": \"(VALOR TOTAL NO FORMATO FLOAT)\",\n\"detalhes\": \"(EXPLIQUE O QUE PODE SER A COMPRA E NOME DOS ITENS)\",\n\"tipo\": \"(IDENTIFIQUE SE O VALOR É UMA RECEITA O DESPESA)\",\n\"categoria\": \"(INFORME A CATEGORIA)\"\n\n*CATEGORIAS*\nLazer, Alimentação, Cuidados Pessoais, Despesa, Receita, Saúde, Compras, Casa e Outros.\n\n*ATENÇÃO*\n- Caso não identifique as informações necessárias na imagem, retorne FALSE.\n- Utilize a tool somente uma vez para registrar as informações\n- Registre somente quando tiver todos os dados;"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1420,
        160
      ],
      "id": "d8a11cb3-364b-4783-83fb-5e215ab4ed72",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1380,
        380
      ],
      "id": "6702629e-c692-4bed-ab1a-367158c104df",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "4r4Fgn9sFRNt2fGS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "description": "Utilize essa ferramenta para registrar os dados.",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{$workflow.id}}",
          "cachedResultName": "={{$workflow.id}}"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "estabelecimento": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('estabelecimento', ``, 'string') }}",
            "valor": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('valor', ``, 'number') }}",
            "quando": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('quando', ``, 'string') }}",
            "detalhes": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('detalhes', ``, 'string') }}",
            "tipo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('tipo', ``, 'string') }}",
            "categoria": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('categoria', ``, 'string') }}",
            "whatsapp": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('whatsapp', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "estabelecimento",
              "displayName": "estabelecimento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "valor",
              "displayName": "valor",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "quando",
              "displayName": "quando",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "detalhes",
              "displayName": "detalhes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "whatsapp",
              "displayName": "whatsapp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "tipo",
              "displayName": "tipo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "categoria",
              "displayName": "categoria",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1580,
        380
      ],
      "id": "6aa83c5f-75e3-4580-b2f8-f2af1f7f33ac",
      "name": "registraDAdos"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f3f27a8f-ef57-42aa-8209-e6d3070be1c0",
              "leftValue": "={{ $json.output }}",
              "rightValue": "FALSE",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1760,
        160
      ],
      "id": "b543a7d3-9e67-4e5a-b95a-a42c5dcb3506",
      "name": "If2"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "zanini",
        "remoteJid": "={{ $('Filtra Dados').item.json.whatsapp }}",
        "messageText": "Oops! Não foi possível registrar as informações/",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1980,
        80
      ],
      "id": "ca9587d9-8341-456c-9cdb-eaa5255b5ddb",
      "name": "Mensagem de Erro1",
      "credentials": {
        "evolutionApi": {
          "id": "5X7A82p6sTHLRQRC",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1980,
        280
      ],
      "id": "99686c3b-3aef-4394-a164-fbd1c474dc29",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=hora atual: {{ $now }}\n\nIdentifique na imagem o valor total da compra, nome do estabelecimento, data e hora (se não encontrar utilize a data e hora atual), categoria, identifique e registre também o tipo da moviementação se é uma 'despesa' ou 'receita'. Retorne os dados encontrados no formato json. Ex.:\n\n{\n\"estabelecimento\": \"(NOME_ESTABELECIMENTO)\",\n\"quando\": \"(DATA E HORA NO FORMATO TIMESTAMP)\",\n\"valorTotal\": \"(VALOR TOTAL NO FORMATO FLOAT)\",\n\"detalhes\": \"(EXPLIQUE O QUE PODE SER A COMPRA E NOME DOS ITENS)\",\n\"tipo\": \"(IDENTIFIQUE SE O VALOR É UMA RECEITA O DESPESA)\",\n\"categoria\": \"(INFORME A CATEGORIA)\",\n}\n*CATEGORIAS*\nLazer, Alimentação, Cuidados Pessoais, Despesa, Receita, Saúde, Compras, Casa e Outros.\n\n*ATENÇÃO*\nCaso não identifique as informações necessárias na imagem, retorne FALSE.",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        580,
        -380
      ],
      "id": "7e19f6e1-eb73-43c8-b014-fb0e03d43161",
      "name": "Analiza a Imagem",
      "credentials": {
        "openAiApi": {
          "id": "4r4Fgn9sFRNt2fGS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f3f27a8f-ef57-42aa-8209-e6d3070be1c0",
              "leftValue": "={{ $json.content }}",
              "rightValue": "FALSE",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        800,
        -380
      ],
      "id": "03d18a9f-22e8-4cc2-bddd-e26d94b42d4c",
      "name": "Verifica se é uma imagem com dados de compra"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data.base64",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        340,
        -380
      ],
      "id": "011a9132-1ecd-4c85-8b2d-36577a0a056f",
      "name": "Converte o base64 em imagem"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data.base64",
        "options": {
          "fileName": "audio.mp3",
          "mimeType": "audio/mpeg"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        320,
        780
      ],
      "id": "ca52624b-fea6-4196-ad5f-87b359424e12",
      "name": "Converte o base64 em áudio"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        580,
        780
      ],
      "id": "ba2d3e28-f2fc-4e60-a85d-91cec9004dfe",
      "name": "Transcreve o audio",
      "credentials": {
        "openAiApi": {
          "id": "4r4Fgn9sFRNt2fGS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=hora atual: {{ $now }}\nmensagem: {{ $json.text }}\n\nIdentifique as informações contidas na mensagem como o valor total da compra, nome do estabelecimento, data e hora (se não encontrar utilize a data e hora atual), categoria, identifique e registre também o tipo da moviementação se é uma 'despesa' ou 'receita' . Utilize a tool \"registraDados\" para salvar as informações.\n\n\"whatsapp\": {{ $('Verifica o Tipo de mensagem').item.json.whatsapp }},\n\"estabelecimento\": \"(NOME_ESTABELECIMENTO)\",\n\"quando\": \"(DATA E HORA NO FORMATO TIMESTAMP)\",\n\"valorTotal\": \"(VALOR TOTAL NO FORMATO FLOAT)\",\n\"detalhes\": \"(EXPLIQUE O QUE PODE SER A COMPRA E NOME DOS ITENS)\"\n\"tipo\": \"(IDENTIFIQUE SE O VALOR É UMA RECEITA O DESPESA)\"\n\"categoria\": \"(INFORME A CATEGORIA)\"\n\n*CATEGORIAS*\nLazer, Alimentação, Cuidados Pessoais, Despesa, Receita, Saúde, Compras, Casa e Outros.\n\n*ATENÇÃO*\n- Caso não identifique as informações necessárias na imagem, retorne FALSE.\n- Utilize a tool somente uma vez para registrar as informações\n- Registre somente quando tiver todos os dados;"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        860,
        780
      ],
      "id": "f57a1b58-6faa-4536-80ff-9bc0aecef6bb",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        820,
        1000
      ],
      "id": "fab19ddc-a48a-48bb-bd22-806fdfd9e5ca",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "4r4Fgn9sFRNt2fGS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "description": "Utilize essa ferramenta para registrar os dados.",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{$workflow.id}}",
          "cachedResultName": "={{$workflow.id}}"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "estabelecimento": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('estabelecimento', ``, 'string') }}",
            "valor": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('valor', ``, 'number') }}",
            "quando": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('quando', ``, 'string') }}",
            "detalhes": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('detalhes', ``, 'string') }}",
            "tipo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('tipo', ``, 'string') }}",
            "categoria": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('categoria', ``, 'string') }}",
            "whatsapp": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('whatsapp', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "estabelecimento",
              "displayName": "estabelecimento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "valor",
              "displayName": "valor",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "quando",
              "displayName": "quando",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "detalhes",
              "displayName": "detalhes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "whatsapp",
              "displayName": "whatsapp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "tipo",
              "displayName": "tipo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "categoria",
              "displayName": "categoria",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1020,
        1000
      ],
      "id": "231f0524-225f-4a28-8115-4cc7b207c5a5",
      "name": "registraDAdos1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f3f27a8f-ef57-42aa-8209-e6d3070be1c0",
              "leftValue": "={{ $json.output }}",
              "rightValue": "FALSE",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1300,
        780
      ],
      "id": "72efd911-1c80-4151-9de7-499a4bb71a85",
      "name": "If"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "zanini",
        "remoteJid": "={{ $('Filtra Dados').item.json.whatsapp }}",
        "messageText": "Oops! Não foi possível registrar as informações/",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1520,
        700
      ],
      "id": "e3c0b7bf-fd35-438f-9f3e-ca29cf777db2",
      "name": "Mensagem de Erro2",
      "credentials": {
        "evolutionApi": {
          "id": "5X7A82p6sTHLRQRC",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1520,
        900
      ],
      "id": "7bc68991-317c-40bb-8966-ca08d3b7b101",
      "name": "No Operation, do nothing2"
    },
    {
      "parameters": {
        "resource": "chat-api",
        "operation": "get-media-base64",
        "instanceName": "zanini",
        "messageId": "={{ $('Webhook').item.json.body.data.key.id }}",
        "convertToMp4": true
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        100,
        780
      ],
      "id": "942f9a88-5517-44b5-b106-428e2a642aac",
      "name": "Caso não recebemos o Base64 consultamos no EVOAPI",
      "credentials": {
        "evolutionApi": {
          "id": "5X7A82p6sTHLRQRC",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "chat-api",
        "operation": "get-media-base64",
        "instanceName": "zanini",
        "messageId": "={{ $('Webhook').item.json.body.data.key.id }}",
        "convertToMp4": true
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        80,
        -380
      ],
      "id": "7454f030-5209-491f-98c2-95c36798823c",
      "name": "Caso não recebemos o Base64 consultamos no EVOAPI1",
      "credentials": {
        "evolutionApi": {
          "id": "5X7A82p6sTHLRQRC",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d0e66d32-363a-44dd-99da-01d8ec7d9178",
              "name": "estabelecimento",
              "value": "={{ $json.estabelecimento }}",
              "type": "string"
            },
            {
              "id": "9412a0d4-078a-4ec3-a4e1-ac2838a2991e",
              "name": "valor",
              "value": "={{ $json.valor }}",
              "type": "string"
            },
            {
              "id": "9b638857-dd2e-49ad-9d00-6956c55f6ca5",
              "name": "quando",
              "value": "={{ $json.quando }}",
              "type": "string"
            },
            {
              "id": "26525693-5aae-48b8-857a-ec9660c06977",
              "name": "detalhes",
              "value": "={{ $json.detalhes }}",
              "type": "string"
            },
            {
              "id": "146697e5-134f-468c-ba93-e9c5f544e56b",
              "name": "tipo",
              "value": "={{ $json.tipo }}",
              "type": "string"
            },
            {
              "id": "da7a2f3f-41ca-418d-a3cc-24912ff384b0",
              "name": "categoria",
              "value": "={{ $json.categoria }}",
              "type": "string"
            },
            {
              "id": "949faa29-e733-46d3-b080-086951c97e59",
              "name": "whatsapp",
              "value": "={{ $json.whatsapp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2720,
        120
      ],
      "id": "31eb177e-7481-4431-acfd-b5245f150cda",
      "name": "filtraDados"
    },
    {
      "parameters": {
        "tableId": "transacoes",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estabelecimento",
              "fieldValue": "={{ $json.estabelecimento }}"
            },
            {
              "fieldId": "valor",
              "fieldValue": "={{ $json.valor }}"
            },
            {
              "fieldId": "quando",
              "fieldValue": "={{ $json.quando }}"
            },
            {
              "fieldId": "detalhes",
              "fieldValue": "={{ $json.detalhes }}"
            },
            {
              "fieldId": "tipo",
              "fieldValue": "={{ $json.tipo }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2940,
        120
      ],
      "id": "95f54363-08c1-4e23-bfe3-5ec2fc79c417",
      "name": "Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "CV9v6NHZ7DKX26f9",
          "name": "Supabase DinDin"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Filtra Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtra Dados": {
      "main": [
        [
          {
            "node": "Verifica o Tipo de mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Responde o Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verifica o Tipo de mensagem": {
      "main": [
        [
          {
            "node": "Caso não recebemos o Base64 consultamos no EVOAPI1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Listar Mensagens",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Caso não recebemos o Base64 consultamos no EVOAPI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Puxar Mensagens",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Listar Mensagens": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Puxar Mensagens": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "filtraDados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "registraDAdos": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Mensagem de Erro1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analiza a Imagem": {
      "main": [
        [
          {
            "node": "Verifica se é uma imagem com dados de compra",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verifica se é uma imagem com dados de compra": {
      "main": [
        [
          {
            "node": "Mensagem de Erro",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Converte o base64 em imagem": {
      "main": [
        [
          {
            "node": "Analiza a Imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Converte o base64 em áudio": {
      "main": [
        [
          {
            "node": "Transcreve o audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "registraDAdos1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Mensagem de Erro2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcreve o audio": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Caso não recebemos o Base64 consultamos no EVOAPI": {
      "main": [
        [
          {
            "node": "Converte o base64 em áudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Caso não recebemos o Base64 consultamos no EVOAPI1": {
      "main": [
        [
          {
            "node": "Converte o base64 em imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filtraDados": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1233c11f-bac8-40ea-bfe5-189cbe0eb514",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d446541a58ef362ee85448f8fa0f9535d2790e4520794dbdd049d119b54fbe57"
  },
  "id": "Yom51xETronBSYzg",
  "tags": []
}