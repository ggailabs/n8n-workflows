{
  "name": "My workflow 5",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "d3945dff-c96d-4c07-a92b-2d089ecdcb8b",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1440,
        544
      ],
      "id": "7f2b8fe1-252b-46da-9cc5-0b6d7170e0da",
      "name": "Mensagem recebida",
      "webhookId": "d3945dff-c96d-4c07-a92b-2d089ecdcb8b"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b59b4acf-36d2-4b01-8382-21afc070dcd4",
                    "leftValue": "={{ $('Mensagem recebida').item.json.body.attachments[0].file_type }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Imagem"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f2eb2514-ca39-4bbf-b370-52dca8479418",
                    "leftValue": "={{ $('Mensagem recebida').item.json.body.conversation.messages[0].attachments[0].file_type }}",
                    "rightValue": "file",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Documento"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Info').item.json.mensagem }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    },
                    "id": "1382cd26-d96e-4c55-99dd-2ca305ffe82e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b9a7e16f-b6e4-45d7-846d-92dcb3117593",
                    "leftValue": "={{ $('Info').item.json.mensagem_de_audio }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "√Åudio"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        912,
        400
      ],
      "id": "1b8e3dc8-d9b4-469b-b0f6-ce7a2880c44d",
      "name": "Tipo de mensagem"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8ca54eae-15d1-49d3-af33-7a6e5d17b833",
              "leftValue": "={{ $('Info').item.json.tipo }}",
              "rightValue": "incoming",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "d44a2d18-71b8-4837-9149-dfa92aa054a9",
              "leftValue": "={{ $('Info').item.json.etiquetas }}",
              "rightValue": "agente-off",
              "operator": {
                "type": "array",
                "operation": "notContains",
                "rightType": "any"
              }
            },
            {
              "id": "0a907f3b-9fcd-4fe8-acda-e4c8e9e0a0ad",
              "leftValue": "={{ $('Info').item.json.etiquetas }}",
              "rightValue": "agente-off-eterno",
              "operator": {
                "type": "array",
                "operation": "notContains",
                "rightType": "any"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        640,
        528
      ],
      "id": "17d5c601-67b2-464f-abc5-bf4fbd7b2b92",
      "name": "Mensagem chegando?"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c8fd010d-6096-4a50-b3e2-e9fe26661840",
              "name": "id_mensagem",
              "value": "={{ $json.body.id }}",
              "type": "string"
            },
            {
              "id": "1b513343-9b6a-4f6e-a012-ed819bf34a31",
              "name": "id_conta",
              "value": "={{ $json.body.account.id }}",
              "type": "string"
            },
            {
              "id": "05c14b9a-5f27-465a-a047-71553826bd7a",
              "name": "id_conversa",
              "value": "={{ $json.body.conversation.id }}",
              "type": "string"
            },
            {
              "id": "8bf522a6-75fb-434a-854c-b736539309e1",
              "name": "telefone",
              "value": "={{ $json.body.sender.phone_number }}",
              "type": "string"
            },
            {
              "id": "0d622a33-f313-4758-a764-fa6cbf2b0587",
              "name": "mensagem",
              "value": "={{ $json.body.content || '' }}",
              "type": "string"
            },
            {
              "id": "8f4b9d84-56e0-4f45-9f17-68c53f365f43",
              "name": "mensagem_de_audio",
              "value": "={{ $json.body.attachments?.[0]?.meta?.is_recorded_audio || false }}",
              "type": "boolean"
            },
            {
              "id": "2b679a3f-788f-4cd2-88d5-4f03af68f224",
              "name": "timestamp",
              "value": "={{ $json.body.created_at }}",
              "type": "string"
            },
            {
              "id": "24caf88e-74ce-43ab-8dc4-1fff471b706f",
              "name": "tipo",
              "value": "={{ $json.body.message_type }}",
              "type": "string"
            },
            {
              "id": "573669d2-1e43-4010-8c82-a67459ffe1db",
              "name": "etiquetas",
              "value": "={{ $json.body.conversation.labels }}",
              "type": "array"
            },
            {
              "id": "40ff895f-f63f-4e4f-bba3-c7d803c277f1",
              "name": "url_chatwoot",
              "value": "https://chatwoot.uroia.com/",
              "type": "string"
            },
            {
              "id": "cf71dea1-d585-4235-8f05-29bc5f82b5df",
              "name": "telegram_chat_id",
              "value": "1111655912",
              "type": "string"
            },
            {
              "id": "d7937d63-890d-4608-921e-7990763b8896",
              "name": "documento",
              "value": "={{ $json.body.conversation.messages[0].attachments?.[0]?.data_url }}",
              "type": "string"
            },
            {
              "id": "50b72a9d-9227-4b1b-9ead-9814f00918d4",
              "name": "source_id",
              "value": "={{ $json.body.source_id }}",
              "type": "string"
            },
            {
              "id": "6ddf0844-e246-4921-8c23-d9eefc4a2067",
              "name": "foto",
              "value": "={{ $json.body.conversation.messages[0].attachments?.[0]?.data_url }}",
              "type": "string"
            },
            {
              "id": "f358b76e-4b51-49bd-8131-efcf19fa9d93",
              "name": "telefone_interno",
              "value": "=+{{ $json.body.conversation.messages[0].conversation.contact_inbox.source_id }}",
              "type": "string"
            },
            {
              "id": "b72a23e0-879e-4197-b3bf-6466071ef795",
              "name": "mail_chatwoot",
              "value": "={{ $json.body.sender.email }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1264,
        544
      ],
      "id": "20e10b0a-473d-4a02-a562-99b6ec72f2ea",
      "name": "Info"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Info').item.json.url_chatwoot }}/api/v1/accounts/{{ $('Info').item.json.id_conta }}/conversations/{{ $('Info').item.json.id_conversa }}/labels",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "labels",
              "value": "={{ $json.payload.append('agente-off').unique() }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        640,
        320
      ],
      "id": "258499aa-1668-408f-b78d-01e36d7a91e6",
      "name": "Colocar etiqueta agente-off"
    },
    {
      "parameters": {
        "url": "={{ $('Info').item.json.url_chatwoot }}/api/v1/accounts/{{ $('Info').item.json.id_conta }}/conversations/{{ $('Info').item.json.id_conversa }}/labels",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        448,
        320
      ],
      "id": "08e7c640-91ec-4b68-be40-ba91d582d337",
      "name": "Listar etiquetas da conversa"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f3fd851f-7e06-4d1c-bc91-8e4f5388ac7a",
                    "leftValue": "={{ $json.tipo }}",
                    "rightValue": "outgoing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Saindo"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.tipo }}",
                    "rightValue": "incoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "5ac799ed-5bd0-49cd-8925-82f3407963eb"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Entrando"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -656,
        544
      ],
      "id": "4a2ab1da-bddd-4f79-b949-4f7955496d8d",
      "name": "Switch1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f3fd851f-7e06-4d1c-bc91-8e4f5388ac7a",
                    "leftValue": "={{ $json.mensagem }}",
                    "rightValue": ".",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Reativar Agente"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c92f94d8-ab34-4620-bb49-e0f84dd2c2b8",
                    "leftValue": "={{ $json.mensagem }}",
                    "rightValue": "Oi",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Desativar agente chatwoot"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.source_id }}",
                    "rightValue": "={{ $('Mensagem recebida').item.json.body.account.name }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    },
                    "id": "5ac799ed-5bd0-49cd-8925-82f3407963eb"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Desativar agente"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1d9ab8df-c905-42a5-9a2b-3ad8bf868e4d",
                    "leftValue": "={{ $json.mail_chatwoot }}",
                    "rightValue": "blust001@yahoo.com.br",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Memoria"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -256,
        288
      ],
      "id": "3922f0c7-ace0-410b-9f47-520557c679e0",
      "name": "Switch2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Info').item.json.url_chatwoot }}/api/v1/accounts/{{ $('Info').item.json.id_conta }}/conversations/{{ $('Info').item.json.id_conversa }}/labels",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "labels",
              "value": "={{ $json.payload[1].remove('agente-off').unique() }} {{ $('Info').item.json.url_chatwoot }} {{ $('Info').item.json.id_conta }} {{ $('Info').item.json.telefone }}"
            },
            {}
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        224,
        0
      ],
      "id": "16a06a07-b462-49bd-be53-90314345f824",
      "name": "Remover etiqueta agente-off"
    },
    {
      "parameters": {
        "url": "={{ $('Info').item.json.url_chatwoot }}/api/v1/accounts/{{ $('Info').item.json.id_conta }}/conversations/{{ $('Info').item.json.id_conversa }}/labels",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        0
      ],
      "id": "58593b6b-0f7c-4a28-92ad-e7299b7eb02c",
      "name": "Listar etiquetas da conversa1"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_historico_mensagens",
          "mode": "list",
          "cachedResultName": "n8n_historico_mensagens"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "active": true,
            "id_conversa": "={{ $('Info').item.json.id_conversa }}",
            "id_conta": "={{ $('Info').item.json.id_conta }}",
            "message": "={{ $json.mensagem_interno }}",
            "created_at": "={{ $now.setZone('America/Buenos_Aires') }}",
            "session_id": "={{ $('Info').item.json.telefone_interno }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "id_conversa",
              "displayName": "id_conversa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "id_conta",
              "displayName": "id_conta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "active",
              "displayName": "active",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        224,
        320
      ],
      "id": "ef7b6195-125f-403d-a636-18c93fa89cac",
      "name": "Postgres",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f3fd851f-7e06-4d1c-bc91-8e4f5388ac7a",
                    "leftValue": "={{ $('Info').item.json.etiquetas }}",
                    "rightValue": "agente-off",
                    "operator": {
                      "type": "array",
                      "operation": "notContains",
                      "rightType": "any"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "AGENTE-ON"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Info').item.json.etiquetas }}",
                    "rightValue": "agente-off",
                    "operator": {
                      "type": "array",
                      "operation": "contains",
                      "rightType": "any"
                    },
                    "id": "5ac799ed-5bd0-49cd-8925-82f3407963eb"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "AGENTE-OFF"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -464,
        592
      ],
      "id": "b7259cba-eaaa-4684-8338-d623c8e4f7f0",
      "name": "Switch"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_historico_mensagens",
          "mode": "list",
          "cachedResultName": "n8n_historico_mensagens"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "active": true,
            "id_conversa": "={{ $('Info').item.json.id_conversa }}",
            "id_conta": "={{ $('Info').item.json.id_conta }}",
            "message": "={{ $json.mensagem_interno }}",
            "created_at": "={{ $json.created_at }}",
            "session_id": "={{ $('Info').item.json.telefone_interno }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "id_conversa",
              "displayName": "id_conversa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "id_conta",
              "displayName": "id_conta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "active",
              "displayName": "active",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        608,
        912
      ],
      "id": "b8a92252-8aaf-4783-9867-3b1dbaf199e4",
      "name": "Postgres1"
    },
    {
      "parameters": {
        "jsCode": "// Criar mensagem como OBJETO\nconst date = new Date();\nconst offsetMs = date.getTimezoneOffset() * 60000;\nconst menosTresHoras = 3 * 60 * 60 * 1000;\nconst localISOTime = new Date(date.getTime() - offsetMs - menosTresHoras)\n  .toISOString()\n  .slice(0, -1);\n\nreturn [\n  {\n    json: {\n      mensagem_interno: {\n        type: \"human\",\n        content: $('Switch').first().json.mensagem,\n        tool_calls: [],\n        additional_kwargs: {},\n        response_metadata: {},\n        invalid_tool_calls: []\n      },\n      created_at: localISOTime\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        384,
        912
      ],
      "id": "0460183e-e83a-4f70-ba83-5919ec4dca85",
      "name": "Code"
    },
    {
      "parameters": {
        "jsCode": "// Criar mensagem como OBJETO\nconst date = new Date();\nconst offsetMs = date.getTimezoneOffset() * 60000;\nconst menosTresHoras = 3 * 60 * 60 * 1000;\nconst localISOTime = new Date(date.getTime() - offsetMs - menosTresHoras)\n  .toISOString()\n  .slice(0, -1);\n\nreturn [\n  {\n    json: {\n      mensagem_interno: {\n        type: \"ai\",\n        content: $('Switch2').first().json.mensagem,\n        tool_calls: [],\n        additional_kwargs: {},\n        response_metadata: {},\n        invalid_tool_calls: []\n      },\n      created_at: localISOTime\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        320
      ],
      "id": "500f5be8-ce5c-4068-b18e-b64f9c50a5c0",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_historico_mensagens",
          "mode": "list",
          "cachedResultName": "n8n_historico_mensagens"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "session_id",
              "value": "={{ $json.telefone }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "id",
              "direction": "DESC"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -176,
        688
      ],
      "id": "489d4f7c-c119-406b-b1af-7791ef6c330a",
      "name": "Postgres2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "20ea4c04-6294-47a8-9a59-358307f043b8",
              "leftValue": "={{ $json.created_at }}",
              "rightValue": "={{ $now.minus(72, 'hours') }}",
              "operator": {
                "type": "dateTime",
                "operation": "before"
              }
            },
            {
              "id": "fd28bbd5-179d-46e3-8a76-2409cbd02637",
              "leftValue": "={{ $('Info').item.json.etiquetas }}",
              "rightValue": "=agente-off-eterno",
              "operator": {
                "type": "array",
                "operation": "notContains",
                "rightType": "any"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        48,
        688
      ],
      "id": "1cc97524-cb66-4bec-b55f-7c33168f9cf3",
      "name": "If"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Info').item.json.url_chatwoot }}api/v1/accounts/{{ $('Info').item.json.id_conta }}/conversations/{{ $('Info').item.json.id_conversa }}/labels",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "labels",
              "value": "={{ $('Info').item.json.etiquetas[0].removeTags(agente-off) }} {{ $('Info').item.json.url_chatwoot }} {{ $('Info').item.json.id_conta }} {{ $('Info').item.json.telefone }}"
            },
            {
              "name": "Info",
              "value": "={{ $('Info').item.json.mensagem }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        384,
        752
      ],
      "id": "ce7781cb-1181-4ede-b879-2081d659c1f7",
      "name": "Remover etiqueta agente-off1",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Info').item.json.url_chatwoot }}/api/v1/accounts/{{ $('Info').item.json.id_conta }}/conversations/{{ $('Info').item.json.id_conversa }}/labels",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "labels",
              "value": "={{ $json.payload.append('agente-off-eterno').unique() }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        224,
        160
      ],
      "id": "32c23411-2a98-4975-bfdc-f340271d0835",
      "name": "Colocar etiqueta agente-off1"
    },
    {
      "parameters": {
        "url": "={{ $('Info').item.json.url_chatwoot }}/api/v1/accounts/{{ $('Info').item.json.id_conta }}/conversations/{{ $('Info').item.json.id_conversa }}/labels",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        160
      ],
      "id": "62da9d6d-618a-449a-90b8-ebe52e138138",
      "name": "Listar etiquetas da conversa3"
    },
    {
      "parameters": {
        "jsCode": "// Recupera os dados completos do node 'Switch1' e os retorna diretamente\nreturn [\n  {\n    json: {\n      ...$('Switch1').item.json\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        672
      ],
      "id": "dc06b6d1-6b56-46cf-a6bc-56c11c3c7d7d",
      "name": "Code2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "574b2d63-be9b-4614-b918-07336c79842e",
              "leftValue": "={{ \n  (() => {\n    const date = new Date();\n    const hour = date.getHours();\n    return (hour >= 22 || hour < 6);\n  })()\n}}",
              "rightValue": "={{ \n  (() => {\n    const date = new Date();\n    const hour = date.getHours();\n    return (hour >= 22 || hour < 6);\n  })()\n}}",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1104,
        544
      ],
      "id": "353325be-cfc4-4b06-b38d-7a6432ab1a42",
      "name": "HOR√ÅRIO NOTURNO"
    },
    {
      "parameters": {
        "amount": 30,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -864,
        384
      ],
      "id": "c839efed-3a36-4e51-83c6-92f4683cf1c5",
      "name": "Esperar1",
      "webhookId": "3f30dce1-2323-4aee-aeb6-7bda60ec6ba1"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_historico_mensagens",
          "mode": "list",
          "cachedResultName": "n8n_historico_mensagens"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "active": true,
            "id_conversa": "={{ $('Info').item.json.id_conversa }}",
            "id_conta": "={{ $('Info').item.json.id_conta }}",
            "message": "={{ $json.mensagem_interno }}",
            "created_at": "={{ $json.created_at }}",
            "session_id": "={{ $('Info').item.json.telefone_interno }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "id_conversa",
              "displayName": "id_conversa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "id_conta",
              "displayName": "id_conta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "active",
              "displayName": "active",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        224,
        480
      ],
      "id": "a6398d3d-d46a-4337-a138-efb1ee851cb5",
      "name": "Postgres3"
    },
    {
      "parameters": {
        "jsCode": "// Criar mensagem como OBJETO\nconst date = new Date();\nconst offsetMs = date.getTimezoneOffset() * 60000;\nconst menosTresHoras = 3 * 60 * 60 * 1000;\nconst localISOTime = new Date(date.getTime() - offsetMs - menosTresHoras)\n  .toISOString()\n  .slice(0, -1);\n\nreturn [\n  {\n    json: {\n      mensagem_interno: {\n        type: \"ai\",\n        content: $('Switch2').first().json.mensagem,\n        tool_calls: [],\n        additional_kwargs: {},\n        response_metadata: {},\n        invalid_tool_calls: []\n      },\n      created_at: localISOTime\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        480
      ],
      "id": "fbdb81ab-0fe6-4b35-9518-c0aae92a09ae",
      "name": "Code3"
    },
    {
      "parameters": {
        "content": "- Pausa agente ap√≥s interven√ß√£o humana(retorna automaticamente ap√≥s uma hora sem interven√ß√£o)\n- Tem palavra chave pra voc√™ interromper eternamente o agente para determinado contato(n√£o voltar automaticamente)\n- Tem palavra chave pra retornar o agente IA imediatamente\n- Guarda mensagens enviadas pelo humano em caso de interven√ß√£o, para usar de contexto depois(independente se a mensagem foi enviada diretamente via chatwoot ou via WhatsApp \n- Pausa agente de madrugada pra n√£o ficar muito estranho nego respondendo 3h da manh√£",
        "height": 368,
        "width": 512
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -992,
        -32
      ],
      "id": "47b2ca89-5445-4aa4-8c92-6df9ddd91134",
      "name": "Sticky Note"
    }
  ],
  "pinData": {},
  "connections": {
    "Mensagem recebida": {
      "main": [
        [
          {
            "node": "Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mensagem chegando?": {
      "main": [
        [
          {
            "node": "Tipo de mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Info": {
      "main": [
        [
          {
            "node": "HOR√ÅRIO NOTURNO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Listar etiquetas da conversa": {
      "main": [
        [
          {
            "node": "Colocar etiqueta agente-off",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Listar etiquetas da conversa1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Listar etiquetas da conversa3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Listar etiquetas da conversa1": {
      "main": [
        [
          {
            "node": "Remover etiqueta agente-off",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Listar etiquetas da conversa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Mensagem chegando?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Remover etiqueta agente-off1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Listar etiquetas da conversa3": {
      "main": [
        [
          {
            "node": "Colocar etiqueta agente-off1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Tipo de mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HOR√ÅRIO NOTURNO": {
      "main": [
        [
          {
            "node": "Esperar1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Esperar1": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "",
  "meta": {
    "instanceId": "e7468266d106ccdbe9fce8b26e62c89833e7ebb9f9ae0b66d38938e32d835852"
  },
  "tags": []
}