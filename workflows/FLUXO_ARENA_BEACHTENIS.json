{
  "name": "09 - ARENA SHOW | NA",
  "nodes": [
    {
      "parameters": {
        "content": "# TREINAMENTO IA",
        "height": 80,
        "width": 396,
        "color": 5
      },
      "id": "3a5cce2c-a5cd-4989-98d5-d3f7cb7765b9",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1440,
        860
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 820,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1460,
        840
      ],
      "typeVersion": 1,
      "id": "b859885c-5f04-4101-8577-9620d11aa772",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "model": "gpt-4.1",
        "options": {}
      },
      "id": "3f31c5d2-207e-4c0f-ac30-0e816a052073",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -340,
        1040
      ],
      "credentials": {
        "openAiApi": {
          "id": "LLqC6lrVdcq19eNv",
          "name": "open_ai"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "748faa0b-9fe2-4d3a-8dde-e91ea14a8a89",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        80,
        880
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "ad009c2f-62b5-4ad1-9fce-066ff8f00373",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -220,
        1040
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, não é mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Sempre que tiver um link envie ele de forma separada sem alteração\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi excluído ou alterado)\n\t\t\t- _itálico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)"
            }
          ]
        }
      },
      "id": "68fb9f17-acdd-48a5-9ec1-82bc98ac772b",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        -380,
        880
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 560,
        "width": 1180,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -560,
        600
      ],
      "typeVersion": 1,
      "id": "c9ac3be1-49d9-4321-b268-b99a82568789",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "# Divisão de Mensagens Inteligente - Texto",
        "height": 80,
        "width": 736,
        "color": 5
      },
      "id": "4174da69-23d8-47f8-b236-1e3d30fe4d4a",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -540,
        620
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 740,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4320,
        1020
      ],
      "typeVersion": 1,
      "id": "02e3b37b-7f70-4668-9d18-cc54eb50c8d8",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "# Gera/Consulta sessionId",
        "height": 80,
        "width": 596,
        "color": 5
      },
      "id": "cbe28bcc-7814-4d40-ac15-40d0a5d8a44f",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4300,
        1040
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "0985904e-7d4e-4fba-ae26-2c44200855e1",
                    "leftValue": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "imagem"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "id": "339cad61-84a7-49a5-93b1-d8163e1a2a15",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -800,
        900
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 780,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5500,
        1020
      ],
      "typeVersion": 1,
      "id": "5a08c132-90e6-4331-9597-fe63525548f2",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Get Memory 2').item.json.propertyName[0] }}",
        "options": {
          "systemMessage": "={\n  \"name\": \"Caio\",\n  \"context\": {\n    \"identity\": \"Assistente Virtual\",\n    \"business\": \"Arena Show\",\n    \"Language\": \"português brasileiro\",\n    \"date\": \"{{ $now.weekdayLong }}, {{ $now.format('dd/MM/yyyy') }}, {{ $now.hour.toString().padStart(2, '0') }}:{{ $now.minute.toString().padStart(2, '0') }}\"\n  },\n  \"Informação atualizada para usar em resposta\": \"{{ $json.output }}\",\n  \"personality\": [\n    \"Fala jovem e descontraída em português brasileiro\",\n    \"Prestativo\",\n    \"Informal\",\n    \"Usa emojis com moderação\",\n    \"Chama o cliente pelo nome\",\n    \"Responde com energia e clareza\",\n    \"Faz uma pergunta por vez\"\n  ],\n  \"objectives\": [\n    \"Agendar horários para uso da quadra de Beach Tennis\"\n  ],\n  \"general_rules\": [\n    \"O alguel da quadra por hora é R$ 90,00\",\n    \"Valor de R$90,00 por hora\",\n    \"Endereço: Rod. Januário Carneiro 1777 - Ypê - Nova Lima\",\n    \"Horários indisponíveis: das 22:01 até 16:59\",\n    \"O pagamento deve ser feito após o uso da quadra via Pix ou cartão\",\n    \"Nunca informe os horários indisponíveis ao cliente\",\n    \"Sempre confirmar o nome do cliente antes de finalizar\",\n    \"Sempre perguntar um item por vez\"\n  ],\n  \"flow\": {\n    \"steps\": [\n      {\n        \"step\": \"Coletar nome ou apelido do cliente\",\n        \"instructions\": \"Pedir o nome ou apelido da pessoa no início do atendimento\",\n        \"example_message\": \"E aí! 👋 Antes da gente seguir, me fala seu nome ou apelido, beleza? 😉\"\n      },\n      {\n        \"step\": \"Perguntar dia do aluguel\",\n        \"instructions\": \"Perguntar para qual dia o cliente quer alugar a quadra\",\n        \"example_message\": \"Show! Agora me diz pra qual dia você tá querendo reservar a quadra?\"\n      },\n      {\n        \"step\": \"Listar horários disponíveis\",\n        \"instructions\": \"Mostrar os horários disponíveis com base no dia informado, excluindo os intervalos proibidos, sem mencionar horários indisponíveis. Informar o valor do aluguel por hora.\",\n        \"example_message\": \"Top! 💥 Esses são os horários que temos livres pra esse dia. Cada hora sai por R$90,00. Me diz qual você quer: [inserir horários aqui]\"\n      },\n      {\n        \"step\": \"Resumo do agendamento\",\n        \"instructions\": \"Fazer um resumo do dia, horário, valor, endereço e forma de pagamento. Informar que estão aguardando o cliente na Arena.\",\n        \"example_message\": \"Fechado! 👊 Tá tudo certo pra você jogar no dia {{data}}, às {{horário}}. Valor: R$90,00. Endereço: Rod. Januário Carneiro 1777 - Ypê - Nova Lima. Pode pagar via Pix ou cartão depois de jogar. Estamos te esperando aqui na Arena Show! 🏖️\"\n      }\n    ]\n  }\n}\n"
        }
      },
      "id": "94de553f-4d5f-470d-b974-f284247d84ea",
      "name": "Atendente",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -1320,
        1000
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Code1').item.json.sessionId }}",
        "contextWindowLength": 100
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -1260,
        1260
      ],
      "id": "55cf1bc3-fe26-4c73-834c-dfd5a6cfceef",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "s8nX9O8Bvt7Gmxo3",
          "name": "postgres_bebidas"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "arenashow",
        "options": {}
      },
      "id": "3d4b7cfd-46fc-43c3-a48d-6af64af52b9d",
      "name": "Webhook EVO",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -5900,
        1200
      ],
      "webhookId": "e97c9a3c-7970-4143-84d1-0c051a7e74a3"
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 360,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4700,
        1020
      ],
      "typeVersion": 1,
      "id": "4b599467-c5b4-41a7-8150-8ca813e5b0b2",
      "name": "Sticky Note42"
    },
    {
      "parameters": {
        "content": "# Dados",
        "height": 80,
        "width": 150,
        "color": 5
      },
      "id": "4c082516-324d-4f53-9a4d-f49827f1fb55",
      "name": "Sticky Note43",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4680,
        1040
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "https://meet.google.com/",
                    "operator": {
                      "type": "string",
                      "operation": "notContains"
                    },
                    "id": "688e7624-00b1-4b2e-beea-c22d303a1669"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Fluxo Normal"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "820760d6-3546-4007-8917-55d366a74261",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "https://meet.google.com",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Avisa grupo"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -940,
        1080
      ],
      "id": "a2da5de8-d309-4f19-87eb-e3fd98ebe1fa",
      "name": "Switch2"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "caio",
        "remoteJid": "={{ $('Variáveis').item.json.telefone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {
          "delay": 1200,
          "linkPreview": false
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        300,
        900
      ],
      "id": "ef2d6c89-b72a-4662-88cf-dc08e4cf603f",
      "name": "Evolution API",
      "credentials": {
        "evolutionApi": {
          "id": "ceUKrl1bq3PNuWXU",
          "name": "caio"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        100,
        380
      ],
      "id": "71cc03cf-4ca2-4d8b-b96f-ec9750e068dd",
      "name": "Merge1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "defac08a-6745-422b-bb05-90da9f47d91b",
              "leftValue": "={{ $('Busca Telefone').last().json.values() }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -360,
        340
      ],
      "id": "49ca2ab7-143e-43d0-bd01-6967a31f2152",
      "name": "If4"
    },
    {
      "parameters": {
        "content": "",
        "height": 380,
        "width": 1180,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -560,
        200
      ],
      "typeVersion": 1,
      "id": "ec218ad2-ee7b-4577-9b19-85c6daf50d6a",
      "name": "Sticky Note54"
    },
    {
      "parameters": {
        "content": "# Cadastra Chat Supabase",
        "height": 80,
        "width": 450,
        "color": 5
      },
      "id": "81412fb7-6377-4be3-918c-48a2eb2d3344",
      "name": "Sticky Note55",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -540,
        220
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "caio",
        "remoteJid": "={{ $('Variáveis').item.json.telefone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {
          "delay": 1
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -340,
        700
      ],
      "id": "a1a4bd23-578a-4cfa-a09e-3fb943785b7f",
      "name": "Evolution API5",
      "credentials": {
        "evolutionApi": {
          "id": "ceUKrl1bq3PNuWXU",
          "name": "caio"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "keyValue": "={{ $('Variáveis').item.json.telefone }}"
            },
            {
              "keyName": "app",
              "keyValue": "terapeuta"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -500,
        340
      ],
      "id": "32678f8c-a1a8-4e22-ad95-30b3ebcf191c",
      "name": "Busca Telefone",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "stVcUw4nYbBoZZNj",
          "name": "supabase_bebidas"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "tableId": "chats",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $('Variáveis').item.json.telefone }}"
            },
            {
              "fieldId": "updated_at",
              "fieldValue": "={{ $now}}"
            },
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $('Code1').item.json.sessionId }}"
            },
            {
              "fieldId": "app",
              "fieldValue": "terapeuta"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -120,
        280
      ],
      "id": "30c36a66-4734-451e-83ad-120c6a5b3694",
      "name": "Adiciona CHAT supabase",
      "credentials": {
        "supabaseApi": {
          "id": "stVcUw4nYbBoZZNj",
          "name": "supabase_bebidas"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Variáveis').item.json.telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "updated_at",
              "fieldValue": "={{ $now }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -120,
        440
      ],
      "id": "c2fdafd4-7c18-456d-98d1-46cabbb4db47",
      "name": "Atualiza CHAT Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "stVcUw4nYbBoZZNj",
          "name": "supabase_bebidas"
        }
      }
    },
    {
      "parameters": {
        "tableId": "chat_messages",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $json.phone }}"
            },
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $json.phone }}"
            },
            {
              "fieldId": "bot_message",
              "fieldValue": "={{ $('Atendente').item.json.output }}"
            },
            {
              "fieldId": "user_message",
              "fieldValue": "={{ $('Mensagem Completa').item.json.mensagem_completa }}"
            },
            {
              "fieldId": "message_type",
              "fieldValue": "={{ $('dados_para_atendimento_humano1').item.json.message.content_type }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        280,
        380
      ],
      "id": "f90934b9-32db-4893-bf39-3509e3a9691a",
      "name": "Cria Histórico Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "stVcUw4nYbBoZZNj",
          "name": "supabase_bebidas"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7c4cdb12-9452-42a6-a39a-c268bd38dce1",
              "leftValue": "={{ $json.output.lenght }}",
              "rightValue": 90,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -520,
        800
      ],
      "id": "5e33eda6-8406-410c-8307-d5829db3d51d",
      "name": "Menos que 240 Caracteres"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "b83f518e-3b23-4dce-bcc8-dd8cf0f5efb9",
      "name": "Split de Mensagem",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -80,
        880
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "3aa9f8f9-2373-4315-bb04-78202fba95cf",
      "name": "1 segundo",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        440,
        900
      ],
      "webhookId": "e74bd52e-96dc-496b-a412-af45cc80514b"
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5980,
        1020
      ],
      "typeVersion": 1,
      "id": "c54853ba-3021-418b-b498-727e36f4244e",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "content": "# Webhook",
        "height": 80,
        "width": 196,
        "color": 5
      },
      "id": "cefe66c0-1b23-4d8c-9fcd-fc0870432fce",
      "name": "Sticky Note67",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5960,
        1040
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Code1').item.json.sessionId }}"
      },
      "id": "7321dfed-38b7-49a5-a8f4-81ba6d7ab036",
      "name": "Delete Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        440,
        380
      ],
      "credentials": {
        "redis": {
          "id": "GFtp8rY5s2p7lP13",
          "name": "redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4280,
        1200
      ],
      "id": "a7c6b271-b2fa-46be-be98-565b501d204e",
      "name": "Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "stVcUw4nYbBoZZNj",
          "name": "supabase_bebidas"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4100,
        1200
      ],
      "id": "92c88fce-46d2-44eb-a949-40d28c49495f",
      "name": "If1"
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -3980,
        1300
      ],
      "id": "0bdff42f-1e60-4131-a111-ee86a5a99d17",
      "name": "Gerar sessionID"
    },
    {
      "parameters": {
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "sessionid",
              "fieldValue": "={{ $json.data }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3840,
        1300
      ],
      "id": "1d87d4e3-12ee-4b58-b1ca-2eea2260a762",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "stVcUw4nYbBoZZNj",
          "name": "supabase_bebidas"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 1100,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2660,
        840
      ],
      "typeVersion": 1,
      "id": "8f11034c-aa99-4606-a7ec-6d20ffd94b65",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 880,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3560,
        840
      ],
      "typeVersion": 1,
      "id": "7302f703-cbeb-4844-ab6f-78ce59873f3e",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "jsCode": "// Obtém os valores dos nós anteriores\nconst sessionid1 = $input.item.json.data;  // Do nó \"Gerar sessionID\"\nconst sessionid2 = $input.item.json.sessionid;  // Do nó \"Supabase\"\n\n// Retorna apenas o que existir, chamando sempre de \"sessionId\"\nreturn [{ sessionId: sessionid1 || sessionid2 || null }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3720,
        1140
      ],
      "id": "9a621c72-7c7c-4881-97b1-e5876f8982b7",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now }}",
        "format": "custom",
        "customFormat": "dd-MM-yyyy",
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -4480,
        1200
      ],
      "id": "b4f705bc-d309-4b5d-996b-12a41f818742",
      "name": "Date & Time1"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.png",
          "mimeType": "image/png"
        }
      },
      "id": "05b0f3d4-44aa-45b8-a9d0-c904fa2482ad",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -3360,
        1300
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6bb482d2-38ce-49f3-b471-a01914cd9232",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3500,
        1300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
              "leftValue": "={{ $('Webhook EVO').item.json.body.data.message.imageMessage.caption }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7808f052-1730-4272-bdfe-3dfe959c2a3c",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3060,
        1300
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}, {{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "5bd7cdc9-d441-42de-b9f0-2903d8c75328",
      "name": "Redis4",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2800,
        1320
      ],
      "credentials": {
        "redis": {
          "id": "GFtp8rY5s2p7lP13",
          "name": "redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "536371e1-6c33-440b-99f3-a535990f8f14",
      "name": "Redis5",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2800,
        1180
      ],
      "credentials": {
        "redis": {
          "id": "GFtp8rY5s2p7lP13",
          "name": "redis"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "4ffe4147-c197-4e43-9db1-956f03a36d98",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -3540,
        1060
      ]
    },
    {
      "parameters": {
        "content": "# Mensagem Picotada",
        "height": 80,
        "width": 396,
        "color": 5
      },
      "id": "5bd083cd-c6b2-4c33-a52b-0f25a3772d80",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2300,
        880
      ]
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Resumo curto da imagem. Responda sem acento, sem hifens",
        "inputType": "base64",
        "options": {}
      },
      "id": "de407149-9680-431f-be98-15cf1edccefc",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -3200,
        1300
      ],
      "credentials": {
        "openAiApi": {
          "id": "LLqC6lrVdcq19eNv",
          "name": "open_ai"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d5a342e9-585b-42ea-be44-644adae10199",
              "leftValue": "={{ $json.Redis2 }}",
              "rightValue": "={{ $json.Redis1 }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a1d47f3d-b565-47b9-bd3b-87f2cac9d5e4",
      "name": "Compara Get Memory1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1960,
        1100
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $('Webhook EVO').item.json.body.data.message.conversation }}",
        "tail": true
      },
      "id": "a121f25f-aaec-41ec-8401-c23b8d33caf6",
      "name": "Text Memory1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2800,
        860
      ],
      "credentials": {
        "redis": {
          "id": "GFtp8rY5s2p7lP13",
          "name": "redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $json.text }}",
        "tail": true
      },
      "id": "ba5d2ac8-2cfe-4592-978e-cabd67d4c4ae",
      "name": "Audio Memory1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2800,
        1020
      ],
      "credentials": {
        "redis": {
          "id": "GFtp8rY5s2p7lP13",
          "name": "redis"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f336a1ff-e577-489d-a739-1eb8bd509245",
              "name": "Redis2",
              "value": "={{ $json.propertyName }}",
              "type": "string"
            },
            {
              "id": "946d1420-e379-46e3-8fcd-3816340fbabb",
              "name": "Redis1",
              "value": "={{ $('Get Memory 1').item.json.propertyName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f806a025-1f25-4255-b004-37c1c677ae15",
      "name": "Edit Fields8",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2140,
        1100
      ],
      "disabled": true
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "0a09b2b4-4e3b-4cf7-81ce-20004dc84f5a",
      "name": "Wait3",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -2460,
        1100
      ],
      "webhookId": "522e69dd-bdbe-40f2-994a-b774917125a6"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Code1').item.json.sessionId }}",
        "options": {}
      },
      "id": "e8416f6f-981d-477a-9813-074b218736cb",
      "name": "Get Memory 1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2620,
        1100
      ],
      "credentials": {
        "redis": {
          "id": "GFtp8rY5s2p7lP13",
          "name": "redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Code1').item.json.sessionId }}",
        "options": {}
      },
      "id": "3553ddae-20a5-4df1-8185-f7cf04467aca",
      "name": "Get Memory 2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2300,
        1100
      ],
      "credentials": {
        "redis": {
          "id": "GFtp8rY5s2p7lP13",
          "name": "redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $json.telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3880,
        1140
      ],
      "id": "e36808fd-dc35-4ee4-b438-35eaf9632c8b",
      "name": "Get Dados",
      "credentials": {
        "supabaseApi": {
          "id": "stVcUw4nYbBoZZNj",
          "name": "supabase_bebidas"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d88c137-383f-4307-b3cc-1f6a560ea67b",
              "name": "telefone",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "7e2f520e-4952-425b-82ca-792cc46680d4",
              "name": "mensagem",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.conversation }}{{ $('Webhook EVO').item.json.body.data.message.extendedTextMessage.text }}",
              "type": "string"
            },
            {
              "id": "de1388b1-a6e4-42df-a6a5-7e9b4594f97d",
              "name": "body.event",
              "value": "={{ $('Webhook EVO').item.json.body.event }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "11796fcd-7a7c-4dd5-b7fd-cd162b3ad398",
      "name": "Variáveis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4640,
        1200
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f16b1bf-1a3e-4029-8d7a-1bccb919ee43",
              "name": "message.message_id",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.id || '' }}",
              "type": "string"
            },
            {
              "id": "11800d83-ecca-4f9c-a878-a2419db0c8e9",
              "name": "message.chat_id",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid || '' }}",
              "type": "string"
            },
            {
              "id": "c33f9527-e661-49e5-8e5e-64f3b430928a",
              "name": "message.content_type",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.extendedTextMessage ? 'text' : '' }}{{ $('Webhook EVO').item.json.body.data.message.conversation ? 'text' : '' }}{{ $('Webhook EVO').item.json.body.data.message.audioMessage ? 'audio' : '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage ? 'image' : '' }}",
              "type": "string"
            },
            {
              "id": "06eba1c9-cff0-4f68-b6da-6bb0092466b7",
              "name": "message.content",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.extendedTextMessage?.text || '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage?.caption || '' }}{{ $('Webhook EVO').item.json.body.data.message.conversation || '' }}",
              "type": "string"
            },
            {
              "id": "b97f1af3-5361-46fc-9303-d644921231d8",
              "name": "message.timestamp",
              "value": "={{ $('Webhook EVO').item.json.body.data.messageTimestamp.toDateTime('s').toISO() }}",
              "type": "string"
            },
            {
              "id": "dc3dc59c-90a3-4a45-bea2-de092c91083b",
              "name": "message.content_url",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.audioMessage?.url || '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage?.url || '' }}",
              "type": "string"
            },
            {
              "id": "8b01a818-a456-476e-bace-adefe2f04eb4",
              "name": "message.event",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.fromMe ? 'outcoming' : 'incoming' }}",
              "type": "string"
            },
            {
              "id": "b2f1f6b5-292f-4695-9e41-be200c6d7053",
              "name": "instance.name",
              "value": "={{ $json.body.instance }}",
              "type": "string"
            },
            {
              "id": "572fcce5-8a26-4e8f-a48a-ef0bee569dcd",
              "name": "instance.apikey",
              "value": "={{ $json.body.apikey }}",
              "type": "string"
            },
            {
              "id": "e90043db-657b-461c-b040-2d6089abfbdb",
              "name": "instance.server_url",
              "value": "={{ $json.body.server_url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "04dc2e10-042b-4eb8-95f8-a16c597789c0",
      "name": "dados_para_atendimento_humano1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5420,
        1200
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Ia Ativa"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "3ef0e01c-cc14-4663-bb4d-2905b350c3ab",
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Ia Desativada"
            }
          ]
        },
        "options": {}
      },
      "id": "8e2b591c-9b07-4116-89fb-29792ac17e20",
      "name": "Switch Block",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -4880,
        1300
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.event }}",
                    "rightValue": "outcoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "outcoming"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "d7b42536-638f-4128-b51b-6aa913e9d9bc",
                    "leftValue": "={{ $json.message.event }}",
                    "rightValue": "incoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "incoming"
            }
          ]
        },
        "options": {}
      },
      "id": "2d956d2e-6994-4c43-944b-2fb2da5cbed7",
      "name": "Switch6",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -5240,
        1200
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $json.message.chat_id }}_block",
        "value": "true",
        "keyType": "string",
        "expire": true,
        "ttl": 1
      },
      "id": "9a8283ed-1c93-4f89-86f3-49f71c672805",
      "name": "PARA IA",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -5040,
        1140
      ],
      "credentials": {
        "redis": {
          "id": "GFtp8rY5s2p7lP13",
          "name": "redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "block",
        "key": "={{ $json.message.chat_id }}_block",
        "options": {}
      },
      "id": "09e6cbe8-0f00-40bb-a9ab-d4f96ed1d146",
      "name": "Verificar Atendimento",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -5040,
        1300
      ],
      "credentials": {
        "redis": {
          "id": "GFtp8rY5s2p7lP13",
          "name": "redis"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const data = $item(0).$node[\"Compara Get Memory1\"].json[\"Redis2\"]; // Obtém o valor de Redis2 do nó \"If\"\n\n// Verifica se o dado é uma string que representa um array, e converte se necessário\nlet array = Array.isArray(data) ? data : JSON.parse(data);\n\n// Junta os elementos do array com um espaço entre eles\nconst mensagem_completa = array.join(\" \");\n\n// Retorna o resultado com o nome da variável \"mensagem_completa\"\nreturn [{ json: { mensagem_completa } }];\n"
      },
      "id": "5d4e7a3e-fa71-4baa-a095-0bc6c55085e2",
      "name": "Mensagem Completa",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1740,
        1080
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.ogg",
          "mimeType": "application/ogg"
        }
      },
      "id": "a703b172-71f8-477d-8e93-057ae2efc01b",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -3160,
        1100
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "1ab96855-387f-4df1-8378-96ad84e8fb6c",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -2980,
        1100
      ],
      "credentials": {
        "openAiApi": {
          "id": "LLqC6lrVdcq19eNv",
          "name": "open_ai"
        }
      }
    },
    {
      "parameters": {
        "content": "# Pausa para Atendimento Humano",
        "height": 80,
        "width": 656,
        "color": 5
      },
      "id": "81ac25ba-fe0e-4e4f-b731-e7552f023fd4",
      "name": "Sticky Note46",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5480,
        1060
      ]
    },
    {
      "parameters": {
        "content": "# Filtro de menagem",
        "height": 80,
        "width": 356,
        "color": 5
      },
      "id": "838bd5bb-f2ce-473f-93aa-f7de45d0e778",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3540,
        860
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8091fa29-ed71-4691-926c-e6cce8b5418a",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3320,
        1100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e41bbd-c264-4a36-b76e-cef79392855b",
              "leftValue": "={{ $json.body.data.key.remoteJid }}",
              "rightValue": "553199905686@s.whatsapp.net",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5680,
        1240
      ],
      "id": "bea8e1cd-3a72-429b-81ad-b6e0f0aae292",
      "name": "If2",
      "disabled": true
    },
    {
      "parameters": {
        "path": "68f98ccc-8d2a-48fa-828b-28da838ffbdb"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 1,
      "position": [
        -1200,
        1580
      ],
      "id": "f2e13d88-c5e2-4a32-8e70-40a9ef39e580",
      "name": "MCP Server (Planilha)",
      "webhookId": "68f98ccc-8d2a-48fa-828b-28da838ffbdb"
    },
    {
      "parameters": {
        "sseEndpoint": "https://webhook.depositointeligente.com.br/mcp/43f3b94f-4ccd-45a4-bdb9-a079b2c1159d/sse"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        -1140,
        1240
      ],
      "id": "7dcddc3d-9d39-434b-a445-377e589ad4ca",
      "name": "MCP Client"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        -1020,
        1240
      ],
      "id": "2ed7c1ae-8621-4413-a46c-2ee5f7d730de",
      "name": "Think"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "754750721ea662f279c44b91c6c8a2aaccc813712a5bcb857aa5fc1daedec5b8@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Quadra 1"
        },
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -1180,
        1800
      ],
      "id": "72e87c0a-4fbd-40a1-9b23-38f6ca0d729d",
      "name": "Quadra",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "snQDhd5hhVnQHeFh",
          "name": "calendar"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4.1",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -1420,
        1240
      ],
      "id": "fab03d4c-0b59-47c0-b4c8-4059d087e637",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "LLqC6lrVdcq19eNv",
          "name": "open_ai"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 480,
        "width": 820,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1460,
        1500
      ],
      "typeVersion": 1,
      "id": "ddd2a3f7-c94d-4a8f-9636-1106f45ceb7a",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "lara",
        "remoteJid": "120363383659037085@g.us",
        "messageText": "=🚨 Novo Lead: wa.me/{{ $('Variáveis').item.json.telefone.split('@')[0] }} 🚨\n Cliente: {{ $('Webhook EVO').item.json.body.data.pushName }}\n\nCASO:\n{{ $json.text }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1400,
        1380
      ],
      "id": "2eae0492-7e16-48a3-94fb-4301d9fefbb9",
      "name": "Evolution API8",
      "credentials": {
        "evolutionApi": {
          "id": "bi5WNmFk08jaGTnE",
          "name": "lara"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "lara",
        "remoteJid": "={{ $('Variáveis').item.json.telefone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -460,
        1380
      ],
      "id": "cff50d1a-87d8-47f1-b3df-ba702ff83714",
      "name": "Evolution API4",
      "credentials": {
        "evolutionApi": {
          "id": "bi5WNmFk08jaGTnE",
          "name": "lara"
        }
      }
    },
    {
      "parameters": {
        "content": "# AVISAR NOVO LEAD NO GRUPO",
        "height": 80,
        "width": 656,
        "color": 5
      },
      "id": "6951bf38-52c9-4c22-bc2b-4121efe3b8f5",
      "name": "Sticky Note51",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -520,
        1280
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 400,
        "width": 2200,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -540,
        1260
      ],
      "typeVersion": 1,
      "id": "d512c38a-474b-4e2e-a896-cf8453fec767",
      "name": "Sticky Note47"
    },
    {
      "parameters": {
        "model": "gpt-4.1",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1040,
        1540
      ],
      "id": "df8ef5ac-982f-4700-9673-5f42c3b2247b",
      "name": "OpenAI Chat Model6",
      "credentials": {
        "openAiApi": {
          "id": "LLqC6lrVdcq19eNv",
          "name": "open_ai"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Você é um agente resumidor de casos dos clientes, você analisa a conversa entre o agente e o cliente e cria um resumo do problema que ele está enfrentando de forma bem detalhada somente do problema do cliente e preferencia pela data da sessão, não precisa de informações sobre as respostas do agente para o cliente, e gera o resultado sem dicas de uso ou informações extras \n\n# Conversa entre o cliete e o agente de IA:\n{{ $json.texto }}"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1060,
        1380
      ],
      "id": "c6bb1b30-1b03-4d31-a9f1-7fdb9304e667",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        40,
        1380
      ],
      "id": "5990cf8c-18bf-4a47-987f-a0d4228628bc",
      "name": "Loop Over Items6"
    },
    {
      "parameters": {
        "jsCode": "return $('Aggregate2').all().map(item => {\n  // Tenta acessar a propriedade 'conversas' e verifica se ela é um array\n  const conversas = item.json.conversas || []; // Garante que é pelo menos um array vazio\n\n  if (!Array.isArray(conversas)) {\n    throw new Error(\"A propriedade 'conversas' não é um array.\");\n  }\n\n  // Processa cada conversa e verifica as mensagens\n  const textoUnico = conversas.map(conversa => {\n    const cliente = conversa.user_message || \"sem mensagem do chatbot\";\n    const agente = conversa.bot_message || \"sem resposta\";\n    \n    // Verifica se a data existe e formata\n    const dataOriginal = conversa.created_at || \"Data da Mensagem indisponível\";\n    const dataFormatada = dataOriginal !== \"Data da Mensagem indisponível\"\n      ? formatarData(dataOriginal)\n      : dataOriginal;\n\n    return `em: ${dataFormatada}\\n\\n - agente(chatbot): ${agente} \\n - cliente: ${cliente}\\n`;\n  }).join('\\n\\n');\n\n  // Retorna o texto final como resultado\n  return {\n    json: {\n      texto: textoUnico\n    }\n  };\n});\n\n// Função para formatar a data\nfunction formatarData(dataString) {\n  const data = new Date(dataString); // Converte a string em objeto Date\n  if (isNaN(data)) {\n    return \"Data inválida\"; // Retorna se a data não for válida\n  }\n  \n  // Formata no padrão DD/MM/YYYY HH:mm\n  const dia = String(data.getDate()).padStart(2, '0');\n  const mes = String(data.getMonth() + 1).padStart(2, '0'); // Mês começa em 0\n  const ano = data.getFullYear();\n  const horas = String(data.getHours()).padStart(2, '0');\n  const minutos = String(data.getMinutes()).padStart(2, '0');\n  \n  return `${dia}/${mes}/${ano} ${horas}:${minutos}`;\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        820,
        1400
      ],
      "id": "9edac66f-4d9e-43bb-82cf-63db1247e57e",
      "name": "Code6"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "conversas",
        "include": "specifiedFields",
        "fieldsToInclude": "id,message_type,created_at,user_message, bot_message,phone, conversation_id",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        580,
        1400
      ],
      "id": "d2f44001-d73a-477f-8444-6154104b1cbb",
      "name": "Aggregate2"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chat_messages",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            },
            {
              "keyName": "active",
              "condition": "eq",
              "keyValue": "true"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        320,
        1400
      ],
      "id": "d2641539-4008-480a-a1b4-df2ff737f10e",
      "name": "ListMessages-Supabase2",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "stVcUw4nYbBoZZNj",
          "name": "supabase_bebidas"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "app",
              "condition": "eq",
              "keyValue": "drana"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -200,
        1380
      ],
      "id": "43832901-77b2-49c5-a672-97f386c60166",
      "name": "ListChats-Supabase2",
      "credentials": {
        "supabaseApi": {
          "id": "stVcUw4nYbBoZZNj",
          "name": "supabase_bebidas"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE chat_messages (\n  id BIGSERIAL PRIMARY KEY,\n  created_at TIMESTAMPTZ, \n  phone TEXT,\n  conversation_id TEXT, \n  bot_message TEXT,\n  user_message TEXT, \n  message_type TEXT,\n  active BOOLEAN DEFAULT TRUE\n);\n",
        "options": {}
     },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4840,
        560
      ],
      "id": "b7b72a1f-7f36-425b-99d7-558ca5d9fc44",
      "name": "Cria Tabela Chat_Messages",
      "credentials": {
        "postgres": {
          "id": "s8nX9O8Bvt7Gmxo3",
          "name": "postgres_bebidas"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from chat_messages",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4580,
        780
      ],
      "id": "c6b15505-09ca-4924-af4e-1a58f4edbefb",
      "name": "Deleta Conteúdo Chat_Messages",
      "credentials": {
        "postgres": {
          "id": "s8nX9O8Bvt7Gmxo3",
          "name": "postgres_bebidas"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4640,
        760
      ],
      "typeVersion": 1,
      "id": "698a0449-62d1-44db-8167-e8b49db6f4be",
      "name": "Sticky Note66"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from dados_cliente",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4320,
        780
      ],
      "id": "9baf3b63-aeb4-49ec-b56e-e596223cbdfa",
      "name": "Deleta Conteúdo Dados Cliente",
      "credentials": {
        "postgres": {
          "id": "s8nX9O8Bvt7Gmxo3",
          "name": "postgres_bebidas"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from chats",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4060,
        780
      ],
      "id": "d2d09c40-2bad-431c-8fd1-a432ceb9701f",
      "name": "Deleta Conteúdo Chats",
      "credentials": {
        "postgres": {
          "id": "s8nX9O8Bvt7Gmxo3",
          "name": "postgres_bebidas"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4120,
        760
      ],
      "typeVersion": 1,
      "id": "6ca89b11-bda1-4645-b7a5-7c3f300b441e",
      "name": "Sticky Note65"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table chats (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  phone text,\n  updated_at text, \n  app text,\n  conversation_id text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4320,
        560
      ],
      "id": "25cc6051-d23f-4dd1-8413-96fac12423ac",
      "name": "Cria Tabela Chats",
      "credentials": {
        "postgres": {
          "id": "s8nX9O8Bvt7Gmxo3",
          "name": "postgres_bebidas"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create extension vector;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4060,
        560
      ],
      "id": "5bbc05fc-6404-4c88-bdbc-45eab74c5874",
      "name": "Cria Extensão Vetor",
      "credentials": {
        "postgres": {
          "id": "s8nX9O8Bvt7Gmxo3",
          "name": "postgres_bebidas"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create function match_documents (\n  query_embedding vector(1536),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where metadata @> filter\n  order by documents.embedding <=> query_embedding\n  limit match_count;\nend;\n$$;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3800,
        560
      ],
      "id": "215de82d-3edc-4e8b-bac9-7b45193c6b9c",
      "name": "Cria função Busca em Vetor",
      "credentials": {
        "postgres": {
          "id": "s8nX9O8Bvt7Gmxo3",
          "name": "postgres_bebidas"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from n8n_chat_histories",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4840,
        780
      ],
      "id": "1f1871ff-5b3a-427c-b430-189d8f1cd6b4",
      "name": "Deleta Histórico",
      "credentials": {
        "postgres": {
          "id": "s8nX9O8Bvt7Gmxo3",
          "name": "postgres_bebidas"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4640,
        540
      ],
      "typeVersion": 1,
      "id": "21caa4de-5820-4fe2-bb56-c078722bf474",
      "name": "Sticky Note57"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4380,
        760
      ],
      "typeVersion": 1,
      "id": "0eebb20f-2952-4f26-b5c3-747131e56106",
      "name": "Sticky Note56"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4380,
        540
      ],
      "typeVersion": 1,
      "id": "86a41f17-62b4-4543-828c-e6b900cb6263",
      "name": "Sticky Note50"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4900,
        540
      ],
      "typeVersion": 1,
      "id": "bace6831-8aaf-4cfc-a66c-3ac5808eddb6",
      "name": "Sticky Note49"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3600,
        540
      ],
      "typeVersion": 1,
      "id": "310d1e95-88c1-40b6-b4c6-6b6a452721f6",
      "name": "Sticky Note48"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3860,
        540
      ],
      "typeVersion": 1,
      "id": "54585957-138e-460a-a6e2-cac8da43d1f2",
      "name": "Sticky Note40"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from documents",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3800,
        780
      ],
      "id": "5d42d90a-5156-4aaf-b1bb-e83c8d193dcb",
      "name": "Deleta Conteúdo Documentos",
      "credentials": {
        "postgres": {
          "id": "s8nX9O8Bvt7Gmxo3",
          "name": "postgres_bebidas"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Create a table to store your documents\ncreate table documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3540,
        560
      ],
      "id": "8a2fabe3-da1c-4915-8b5b-02c1fcfb283b",
      "name": "Cria Tabela Documentos",
      "credentials": {
        "postgres": {
          "id": "s8nX9O8Bvt7Gmxo3",
          "name": "postgres_bebidas"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table dados_cliente (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  telefone text, \n  sessionid text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4580,
        560
      ],
      "id": "a5f02961-c973-415e-8383-95b72522e2e4",
      "name": "Cria Tabela Dados Cliente",
      "credentials": {
        "postgres": {
          "id": "s8nX9O8Bvt7Gmxo3",
          "name": "postgres_bebidas"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3860,
        760
      ],
      "typeVersion": 1,
      "id": "bc11dc4a-d516-4ece-ac85-a047a239ef97",
      "name": "Sticky Note37"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4120,
        540
      ],
      "typeVersion": 1,
      "id": "e7751e6e-38e1-430d-8c40-78919d133c6b",
      "name": "Sticky Note33"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4900,
        760
      ],
      "typeVersion": 1,
      "id": "e06d5e62-0b3c-443f-b7dc-396db43ec286",
      "name": "Sticky Note31"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "Evolution API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Split de Mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atendente": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca Telefone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Atendente",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Webhook EVO": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Evolution API": {
      "main": [
        [
          {
            "node": "1 segundo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Cria Histórico Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Adiciona CHAT supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Atualiza CHAT Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca Telefone": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adiciona CHAT supabase": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza CHAT Supabase": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Menos que 240 Caracteres": {
      "main": [
        [
          {
            "node": "Evolution API5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split de Mensagem": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1 segundo": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cria Histórico Supabase": {
      "main": [
        [
          {
            "node": "Delete Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Get Dados",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar sessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar sessionID": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Text Memory1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Memory1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compara Get Memory1": {
      "main": [
        [
          {
            "node": "Mensagem Completa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Memory1": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Memory1": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "Compara Get Memory1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Get Memory 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 1": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 2": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Dados": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Variáveis": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_para_atendimento_humano1": {
      "main": [
        [
          {
            "node": "Switch6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Block": {
      "main": [
        [
          {
            "node": "Variáveis",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Variáveis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch6": {
      "main": [
        [
          {
            "node": "PARA IA",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verificar Atendimento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Atendimento": {
      "main": [
        [
          {
            "node": "Switch Block",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Audio Memory1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mensagem Completa": {
      "main": [
        [
          {
            "node": "Atendente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "dados_para_atendimento_humano1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Quadra": {
      "ai_tool": [
        [
          {
            "node": "MCP Server (Planilha)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Atendente",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Evolution API8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API4": {
      "main": [
        [
          {
            "node": "ListChats-Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items6": {
      "main": [
        [],
        [
          {
            "node": "ListMessages-Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListMessages-Supabase2": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListChats-Supabase2": {
      "main": [
        [
          {
            "node": "Loop Over Items6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "versionId": "59d194a5-ab6a-4935-9c23-6fe572ab7c25",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "a53cc0d865a3b7eb67b3dcd30cfe0f157c745a7e9aeb5e95d7e95d01c24d5092"
  },
  "id": "6uAzwreAYMqlaK8X",
  "tags": []
}

